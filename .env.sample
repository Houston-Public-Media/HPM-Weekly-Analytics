# GA Client credentials are linked to a service account that can be set up through the Google Developer Console
# If you have a main property and an AMP property you want to track, enter the IDs  below
GA_CLIENT="creds/ga-client-secret.json"
GA_MAIN=""
GA_AMP=""

# Google Drive requires an OAuth2.0 endpoint, which can be set up using the Google Developer Console
# The token was captured in the process and saved to a JSON file
# Once the report is updated, the data can be pushed to a sheet on Google Drive. Put the ID of that file below
GDRIVE_CREDS="creds/gdrive-credentials.json"
GDRIVE_TOKEN="creds/gdrive-token.json"
GDRIVE_FILE_ID=""

# YouTube requires an OAuth2.0 endpoint, which can be set up using the Google Developer Console
# The token was captured in the process and saved to a JSON file
YT_ACCESS="creds/yt-access.json"
YT_CLIENT="creds/yt-client-secret.json"
YT_CHANNEL_ID=""

# A comma-separated list of email addresses you want to alert when the report has been run
CLIENT_EMAILS="Email Address <email@address.com>,Second Person <another@guy.com>"

# Our CDN is cached by Amazon Cloudfront, so we need the distro information to clear the cache when the data is updated
CF_DISTRO=""
TIMEZONE="America/Chicago"

# FB tokens can be found by creating an application in FB Developer (you don't have to publish it)
# Use the Graph Explorer to create a page access token with 'manage_pages' and 'read_insights'
# Use the Access Token debugger to remove the expiration date
# The proof is generated using the "App Secret" from your application
FB_PAGE_ID=""
FB_PAGE_ACCESS=""
FB_PAGE_PROOF=""

# Instagram tokens can be found by creating an application in FB Developer (you don't have to publish it)
# This also assumes that your Instagram account is a business account

# Use the Graph Explorer to create a user access token with: 
#    'manage_pages'
#    'read_insights'
#    'business_management'
#    'instagram_basic'
#    'instagram_manage_insights'

# Use the Access Token debugger to remove the expiration date
# The proof is generated using the "App Secret" from your application
INSTAGRAM_ID=""
INSTAGRAM_ACCESS=""
INSTAGRAM_PROOF=""

# AWS credentials are needed if you want to store you data file in S3, or send the email via AWS SES
AWS_KEY=""
AWS_SECRET=""
S3_BUCKET=""

# Username and Password for Triton Webcast Metrics
WCM_USER=""
WCM_PASSWORD=""

# The URL for the analytics graphing application
APP_URL=""

# What email address you want to send the updates from
FROM_EMAIL="Email <email@address.org>"